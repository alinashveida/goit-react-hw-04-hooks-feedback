{"version":3,"sources":["components/App/App.styled.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/App/App.js","index.js"],"names":["Container","styled","div","List","ul","Item","li","Statistics","good","neutral","bad","total","positivePercentage","Button","button","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","type","onClick","name","Title","h1","Wrapper","Section","title","children","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","event","target","state","positiveFeedback","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAEaA,EAAYC,IAAOC,IAAV,wWCATC,EAAOF,IAAOG,GAAV,4EAKJC,EAAOJ,IAAOK,GAAV,8I,cCHF,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,eAACT,EAAD,WACE,eAACE,EAAD,WACE,cAAC,IAAD,IADF,UACqBG,KAErB,eAACH,EAAD,WACE,cAAC,IAAD,IADF,aAC0BI,KAE1B,eAACJ,EAAD,WACE,cAAC,IAAD,IADF,SACkBK,KAElB,eAACL,EAAD,qBAAcM,KACd,eAACN,EAAD,iCAA0BO,EAA1B,UCrBC,I,IAAMC,EAASZ,IAAOa,OAAV,wrBCCJ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,mCACGC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OACxB,cAACR,EAAD,CAEES,KAAK,SACLC,QAASN,EACTO,KAAMH,EAJR,SAMGA,GALIA,QCNR,IAAMI,EAAQxB,IAAOyB,GAAV,6IAOLC,EAAU1B,IAAOC,IAAV,kDCPL,SAAS0B,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,eAACH,EAAD,WACE,cAACF,EAAD,UAAQI,IACPC,KCJQ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,ICKE,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAO1B,EAAP,KAAa2B,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOzB,EAAP,KAAgB2B,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOxB,EAAP,KAAY2B,EAAZ,KAEMC,EAAqB,WACzB,OAAO9B,EAAOC,EAAUC,GA8B1B,OACE,eAACV,EAAD,WACE,cAAC4B,EAAD,CAASC,MAAM,wBAAf,SACE,cAACd,EAAD,CACEC,QAAS,CAAER,OAAMC,UAASC,OAC1BO,gBA1BsB,SAACsB,GAG7B,OAFiBA,EAAMC,OAAfhB,MAGN,IAAK,OACHW,GAAQ,SAACM,GAAD,OAAWA,EAAQ,KAC3B,MAEF,IAAK,UACHL,GAAW,SAACK,GAAD,OAAWA,EAAQ,KAC9B,MAEF,IAAK,MACHJ,GAAO,SAACI,GAAD,OAAWA,EAAQ,KAC1B,MAEF,QACE,OAAO,WAaT,cAACb,EAAD,CAASC,MAAM,aAAf,SACGS,IAAuB,EACtB,cAAC/B,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO2B,IACP1B,mBA3C8B,WACtC,IAAM8B,EAAoB,IAAMlC,EAAQ8B,KAAwB,EAEhE,OAAOK,KAAKC,MAAMF,GAwCUG,KAGtB,cAACd,EAAD,CAAcC,QAAQ,2BC1DhCc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACf,EAAD,MAEFgB,SAASC,eAAe,W","file":"static/js/main.a317ef56.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\nexport const Container = styled.div`\r\n  border: 1px solid #000;\r\n  justify-content: center;\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n  text-align: center;\r\n  width: 600px;\r\n\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background-color: #fff;\r\n  box-shadow: 7px 7px 7px rgb(0 0 0 / 30%);\r\n  border-radius: 10px;\r\n  background-color: #d8bfd8;\r\n  border: none;\r\n`\r\n","import styled from '@emotion/styled'\r\n\r\nexport const List = styled.ul`\r\n  // text-align: left;\r\n  // margin-left: 35%;\r\n`\r\n\r\nexport const Item = styled.li`\r\n  font-weight: 500;\r\n  font-size: 17px;\r\n  line-height: 1.14;\r\n  letter-spacing: 0.03em;\r\n  margin-bottom: 10px;\r\n`\r\n","import { List, Item } from './Statistics.styled'\r\nimport PropTypes from 'prop-types'\r\nimport { ImSmile, ImSad, ImNeutral } from 'react-icons/im'\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <List>\r\n      <Item>\r\n        <ImSmile /> Good: {good}\r\n      </Item>\r\n      <Item>\r\n        <ImNeutral /> Neutral: {neutral}\r\n      </Item>\r\n      <Item>\r\n        <ImSad /> Bad: {bad}\r\n      </Item>\r\n      <Item>Total: {total}</Item>\r\n      <Item>Positive feedback: {positivePercentage}%</Item>\r\n    </List>\r\n  )\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n}\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Button = styled.button`\r\n  margin-right: 15px;\r\n\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  width: 140px;\r\n  height: 45px;\r\n  line-height: 45px;\r\n  border-radius: 45px;\r\n  margin: 10px 20px;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-size: 11px;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  letter-spacing: 3px;\r\n  font-weight: 600;\r\n  color: #524f4e;\r\n  background: white;\r\n  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);\r\n  transition: 0.3s;\r\n\r\n  &:hover {\r\n    color: rgb(24, 24, 24);\r\n    border: 1px solid rgb(198, 198, 198);\r\n    background: #f7f7f7 linear-gradient(#f7f7f7, #f1f1f1);\r\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\r\n    cursor: pointer;\r\n  }\r\n`\r\n","import { Button } from './FeedbackOptions.styled'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      {Object.keys(options).map((option) => (\r\n        <Button\r\n          key={option}\r\n          type=\"button\"\r\n          onClick={onLeaveFeedback}\r\n          name={option}\r\n        >\r\n          {option}\r\n        </Button>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n}\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Title = styled.h1`\r\n  font-weight: 800;\r\n  font-size: 30px;\r\n  line-height: 1.19;\r\n  text-align: center;\r\n  letter-spacing: 0.03em;\r\n`\r\nexport const Wrapper = styled.div`\r\n  padding-top: 20px;\r\n`\r\n","import { Title, Wrapper } from './Section.styled'\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <Wrapper>\r\n      <Title>{title}</Title>\r\n      {children}\r\n    </Wrapper>\r\n  )\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nexport default function Notification({ message }) {\r\n  return <p>{message}</p>\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n}\r\n","import { useState } from 'react'\r\nimport { Container } from './App.styled'\r\n\r\nimport Statistics from '../Statistics/Statistics'\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions'\r\nimport Section from '../Section/Section'\r\nimport Notification from '../Notification/Notification'\r\n\r\nexport default function App() {\r\n  const [good, setGood] = useState(0)\r\n  const [neutral, setNeutral] = useState(0)\r\n  const [bad, setBad] = useState(0)\r\n\r\n  const countTotalFeedback = () => {\r\n    return good + neutral + bad\r\n  }\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    const positiveFeedback = (100 * good) / countTotalFeedback() || 0\r\n\r\n    return Math.round(positiveFeedback)\r\n  }\r\n\r\n  const onLeaveFeedbackButton = (event) => {\r\n    const { name } = event.target\r\n\r\n    switch (name) {\r\n      case 'good':\r\n        setGood((state) => state + 1)\r\n        break\r\n\r\n      case 'neutral':\r\n        setNeutral((state) => state + 1)\r\n        break\r\n\r\n      case 'bad':\r\n        setBad((state) => state + 1)\r\n        break\r\n\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          options={{ good, neutral, bad }}\r\n          onLeaveFeedback={onLeaveFeedbackButton}\r\n        />\r\n      </Section>\r\n\r\n      <Section title=\"Statistics\">\r\n        {countTotalFeedback() > 0 ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback()}\r\n            positivePercentage={countPositiveFeedbackPercentage()}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </Section>\r\n    </Container>\r\n  )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}